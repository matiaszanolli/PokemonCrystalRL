name: Run Tests

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

jobs:
  test:
    name: Run Test Suite
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10"]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libsdl2-dev opencv-python

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov pytest-asyncio pytest-timeout

    - name: Run unit tests
      run: |
        pytest tests/ -v -m "unit" --cov=./ --cov-report=xml

    - name: Run integration tests
      run: |
        pytest tests/ -v -m "integration" --cov=./ --cov-report=xml

    - name: Run monitoring tests
      run: |
        pytest monitoring/ -v -m "monitoring or web_monitoring" --cov=./ --cov-report=xml

    - name: Run web interface tests
      run: |
        pytest monitoring/web/tests/ -v -m "web" --cov=./ --cov-report=xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true

    - name: Run performance tests
      run: |
        pytest tests/ -v -m "performance" --no-cov
      if: always()  # Run even if previous steps failed

    - name: Run stress tests
      run: |
        pytest tests/ -v -m "stress" --no-cov
      if: always()  # Run even if previous steps failed
